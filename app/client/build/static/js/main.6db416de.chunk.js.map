{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthContext","createContext","token","userId","login","noop","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","console","log","AuthPage","text","toast","html","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","onClick","disabled","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6db416de.chunk.js","sourcesContent":["import {useState, useCallback} from \"react\"\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.message || \"Something wet wrong\")\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback( () => setError(null), [])\n\n    return {loading, request, error, clearError}\n}\n","import {createContext} from 'react'\n\n function noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop(),\n    logout: noop(),\n    isAuthenticated: false\n})","import React from 'react'\n\nexport const Loader = () => (\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\n        <div className=\"preloader-wrapper active\">\n            <div className=\"spinner-layer spinner-red-only\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"/>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"/>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nexport const LinksList = ({ links }) => {\n    if (!links.length) {\n        return <p className=\"center\"> LinksList is empty</p>\n    }\n\n    return (\n        <table className=\"responsive-table\">\n            {/*<thead>*/}\n            {/*<tr>*/}\n            {/*    <th>№</th>*/}\n            {/*    <th>Link</th>*/}\n            {/*    <th>ShortLink</th>*/}\n            {/*    <th>Open</th>*/}\n            {/*</tr>*/}\n            {/*</thead>*/}\n\n            <tbody>\n            { links.map((link, index) => {\n                return (\n                    <tr key={link._id}>\n                        <td>{index + 1}</td>\n                        <td>{link.from}</td>\n                        <td>{link.to}</td>\n                        <td>\n                            <Link to={`/detail/${link._id}`}>Open</Link>\n                        </td>\n                    </tr>\n                )\n            }) }\n            </tbody>\n        </table>\n\n    )\n}\n\n// {\"_id\":{\"$oid\":\"607eddf66cfd0135fc629bb5\"},\"clicks\":{\"$numberInt\":\"0\"},\"code\":\"SLLaJaOD8\",\"from\":\"https://materializecss.com/navbar.html\",\"to\":\"http://localhost:5000/t/SLLaJaOD8\",\"owner\":{\"$oid\":\"607e894ebee6b32d26f40f41\"},\"date\":{\"$date\":{\"$numberLong\":\"1618927094248\"}},\"__v\":{\"$numberInt\":\"0\"}}","import React, {useCallback, useContext, useEffect, useState} from \"react\"\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {Loader} from \"../components/Loader\";\nimport {LinksList} from \"../components/LinksList\";\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([])\n    const {loading, request} = useHttp()\n    const {token} = useContext(AuthContext)\n\n    const fetchLinks = useCallback(async () => {\n        try {\n            const fetched = await request('/api/link', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLinks(fetched)\n        } catch (e) {}\n    }, [token, request])\n\n    useEffect(() => {\n        fetchLinks()\n    }, [fetchLinks])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n        <div>\n            <h1>Links Page</h1>\n            <>\n                {!loading && <LinksList links={links}/>}\n            </>\n        </div>\n    )\n}\n","import React, {useContext, useEffect, useState} from \"react\"\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const CreatePage = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const {request} = useHttp()\n    const [link, setLink] = useState('')\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const pressHandler = async event => {\n        if (event.key === 'Enter') {\n            try {\n                const data = await request('/api/link/generate/', 'POST', {from: link}, {\n                    Authorization: `Bearer ${auth.token}`\n                })\n                history.push(`/detail/${data.link._id}`)\n            } catch (e) {}\n        }\n    }\n\n    return (\n        <div>\n            <h1>Create Page</h1>\n            <div className=\"row\">\n                <div className=\"col s6\" style={{paddingTop: '2rem'}}>\n                    <div className=\"input-field\">\n                        <input\n                            placeholder=\"Paste your link\"\n                            id=\"link\"\n                            type=\"text\"\n                            value={link}\n                            onChange={e => setLink(e.target.value)}\n                            onKeyPress={pressHandler}\n                        />\n                        <label htmlFor=\"link\">Paste your link</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport const LinkCard = ({ link }) => {\n    return (\n        <>\n            <h1>Link</h1>\n\n            <p> ShortLink: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n            <p> Source link: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\n            <p> Clicks: <a href={link.clicks} target=\"_blank\" rel=\"noopener noreferrer\">{link.clicks}</a></p>\n            <p>Created <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n        </>\n    )\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {Loader} from \"../components/Loader\";\nimport {LinkCard} from \"../components/LinkCard\";\n\nexport const DetailPage = () => {\n    const {token} = useContext(AuthContext)\n    const {request, loading} = useHttp()\n    const [link, setLink] = useState(null)\n    const linkId = useParams().id\n\n    const getLink = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLink(fetched)\n            console.log('blah');\n        } catch (e) {\n            console.log(\"Durak?\")\n        }\n    }, [token, linkId, request])\n\n    useEffect(() => {\n        console.log(linkId)\n        getLink()\n    }, [getLink, linkId])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n\n                <div>\n                <>\n                    { !loading && link && <LinkCard link={link} /> }\n                </>\n            </div>\n    )\n}\n","import React, {useContext, useEffect, useState} from \"react\"\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/message.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport const AuthPage = () => {\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    const {loading, request, error, clearError} = useHttp()\n    const [form, setForm] = useState({\n        login: '', password: ''\n    })\n\n    useEffect(() =>{\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('/api/auth/register', 'POST', {...form})\n            message(data.message)\n        } catch (e) {}\n    }\n\n    const loginHandler = async () => {\n        try {\n            const data = await request('/api/auth/login', 'POST', {...form})\n            auth.login(data.token, data.userId)\n        } catch (e) {}\n    }\n\n    return (\n        <div className=\"row\">\n                <h1>ShortLink</h1>\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Auth</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Enter your login\"\n                                    id=\"login\"\n                                    type=\"text\"\n                                    name=\"login\"\n                                    // className=\"yellow-input\"\n                                    value={form.login}\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"Login\">Login</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Enter your password\"\n                                    id=\"Password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    // className=\"yellow-input\"\n                                    value={form.password}\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"Password\">Password</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn yellow darken-4\"\n                            style={{marginRight: 10}}\n                            onClick={loginHandler}\n                            disabled={loading}\n                        >\n                            Sign In\n                        </button>\n                        <button\n                            className=\"btn grey lighten-1\"\n                            onClick={registerHandler}\n                            disabled={loading}\n                        >\n                            Sign Up\n                        </button>\n                    </div>\n        </div>\n    )\n}","import {useCallback} from 'react'\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if (window.M && text) {\n            window.M.toast({ html: text })\n        }\n    }, [])\n}","import {useState, useCallback, useEffect} from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [ready, setReady] = useState(false)\n    const [userId, setUserId] = useState(null)\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n        if (data && data.token) {\n            login(data.token, data.userId)\n        }\n        setReady(true)\n    }, [login])\n\n\n    return { login, logout, token, userId, ready }\n}","import React, {useContext} from \"react\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport const Navbar = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const logoutHandler = event => {\n        event.preventDefault()\n        auth.logout()\n        history.push('/')\n    }\n\n    return (\n        <nav>\n            <div className=\"navbar-fixed\" style={{padding: '0 2rem'}}>\n                <a href=\"/\" className=\"brand-logo\">ShortLink</a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><NavLink to=\"/create\">Create</NavLink></li>\n                    <li><NavLink to=\"/links\">Links</NavLink></li>\n                    <li><a href=\"/\" onClick={logoutHandler}>Logout</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from './routes'\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport 'materialize-css'\nimport {Loader} from \"./components/Loader\";\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n\n    if (!ready){\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated\n        }}>\n            <Router>\n                {isAuthenticated && <Navbar/>}\n                <div className=\"container\">\n                    <h1>Serk</h1>\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {LinksPage} from \"./pages/LinksPage\";\nimport {CreatePage} from \"./pages/CreatePage\";\nimport {DetailPage} from \"./pages/DetailPage\";\nimport {AuthPage} from \"./pages/AuthPage\";\n\nexport const useRoutes = isAuthenticated =>{\n    if (isAuthenticated) {\n        return(\n            <Switch>\n                <Route path=\"/links\" exact>\n                    <LinksPage/>\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreatePage/>\n                </Route>\n                <Route path=\"/detail/:id\">\n                    <DetailPage/>\n                </Route>\n                <Redirect to=\"/create\"/>\n            </Switch>\n        )\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <AuthPage />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}